"""initial migration

Revision ID: 57f8698b0207
Revises:
Create Date: 2025-03-11 15:23:00.583294

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import advanced_alchemy

# revision identifiers, used by Alembic.
revision: str = '57f8698b0207'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('logo_url', sa.String(length=255), nullable=True),
    sa.Column('company_name', sa.String(length=100), nullable=False),
    sa.Column('industry', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.CheckConstraint('length(company_name) > 0', name=op.f('ck_companies_check_company_name_not_empty')),
    sa.CheckConstraint('length(industry) > 0', name=op.f('ck_companies_check_industry_not_empty')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_companies'))
    )
    op.create_index(op.f('ix_companies_company_name'), 'companies', ['company_name'], unique=True)
    op.create_table('educational_institutions',
    sa.Column('institution_name', sa.String(length=100), nullable=False),
    sa.Column('institution_type', sa.Enum('Университет', 'Институт', 'Колледж', 'Школа', 'Курс', name='institution_type_enum'), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('accreditation', sa.String(length=100), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.CheckConstraint('length(institution_name) > 0', name=op.f('ck_educational_institutions_check_institution_name_not_empty')),
    sa.CheckConstraint('length(location) > 0', name=op.f('ck_educational_institutions_check_location_not_empty')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_educational_institutions'))
    )
    op.create_index(op.f('ix_educational_institutions_institution_name'), 'educational_institutions', ['institution_name'], unique=True)
    op.create_index(op.f('ix_educational_institutions_institution_type'), 'educational_institutions', ['institution_type'], unique=False)
    op.create_table('roles',
    sa.Column('role_name', sa.Enum('Соискатель', 'Работодатель', name='role_enum'), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles'))
    )
    op.create_index(op.f('ix_roles_role_name'), 'roles', ['role_name'], unique=True)
    op.create_table('users',
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('profile_photo_url', sa.String(length=255), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.CheckConstraint("email LIKE '%@%.%'", name=op.f('ck_users_check_email_format')),
    sa.CheckConstraint('length(first_name) > 0', name=op.f('ck_users_check_first_name_not_empty')),
    sa.CheckConstraint('length(last_name) > 0', name=op.f('ck_users_check_last_name_not_empty')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('cvs',
    sa.Column('user_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_cvs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cvs'))
    )
    op.create_index('idx_cvs_created_at', 'cvs', ['created_at'], unique=False)
    op.create_index(op.f('ix_cvs_user_id'), 'cvs', ['user_id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('role_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_user_roles_role_id_roles'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_roles_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', 'id', name=op.f('pk_user_roles'))
    )
    op.create_index(op.f('ix_user_roles_role_id'), 'user_roles', ['role_id'], unique=False)
    op.create_index(op.f('ix_user_roles_user_id'), 'user_roles', ['user_id'], unique=False)
    op.create_table('education',
    sa.Column('cv_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('institution_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('degree', sa.String(length=100), nullable=False),
    sa.Column('field_of_study', sa.String(length=100), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=False),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.CheckConstraint('length(degree) > 0', name=op.f('ck_education_check_degree_not_empty')),
    sa.CheckConstraint('length(field_of_study) > 0', name=op.f('ck_education_check_field_of_study_not_empty')),
    sa.CheckConstraint('start_year <= end_year OR end_year IS NULL', name=op.f('ck_education_check_year_order')),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_education_cv_id_cvs'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['institution_id'], ['educational_institutions.id'], name=op.f('fk_education_institution_id_educational_institutions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_education'))
    )
    op.create_index(op.f('ix_education_cv_id'), 'education', ['cv_id'], unique=False)
    op.create_index(op.f('ix_education_institution_id'), 'education', ['institution_id'], unique=False)
    op.create_table('work_experience',
    sa.Column('cv_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('company_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('job_title', sa.String(length=100), nullable=False),
    sa.Column('employment_type', sa.Enum('Полная занятость', 'Частичная занятость', 'Удаленная работа', name='employment_type_enum'), nullable=False),
    sa.Column('start_date', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('end_date', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.CheckConstraint('length(job_title) > 0', name=op.f('ck_work_experience_check_job_title_not_empty')),
    sa.CheckConstraint('start_date <= end_date OR end_date IS NULL', name=op.f('ck_work_experience_check_date_order')),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_work_experience_company_id_companies'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('fk_work_experience_cv_id_cvs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_work_experience'))
    )
    op.create_index('idx_work_exp_dates', 'work_experience', ['start_date', 'end_date'], unique=False)
    op.create_index(op.f('ix_work_experience_company_id'), 'work_experience', ['company_id'], unique=False)
    op.create_index(op.f('ix_work_experience_cv_id'), 'work_experience', ['cv_id'], unique=False)
    op.create_index(op.f('ix_work_experience_employment_type'), 'work_experience', ['employment_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_work_experience_employment_type'), table_name='work_experience')
    op.drop_index(op.f('ix_work_experience_cv_id'), table_name='work_experience')
    op.drop_index(op.f('ix_work_experience_company_id'), table_name='work_experience')
    op.drop_index('idx_work_exp_dates', table_name='work_experience')
    op.drop_table('work_experience')
    op.drop_index(op.f('ix_education_institution_id'), table_name='education')
    op.drop_index(op.f('ix_education_cv_id'), table_name='education')
    op.drop_table('education')
    op.drop_index(op.f('ix_user_roles_user_id'), table_name='user_roles')
    op.drop_index(op.f('ix_user_roles_role_id'), table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_cvs_user_id'), table_name='cvs')
    op.drop_index('idx_cvs_created_at', table_name='cvs')
    op.drop_table('cvs')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_role_name'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_educational_institutions_institution_type'), table_name='educational_institutions')
    op.drop_index(op.f('ix_educational_institutions_institution_name'), table_name='educational_institutions')
    op.drop_table('educational_institutions')
    op.drop_index(op.f('ix_companies_company_name'), table_name='companies')
    op.drop_table('companies')
    # ### end Alembic commands ###
